
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –∏ —Å—Ç–∏–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ú–æ–π –î–∞—à–±–æ—Ä–¥",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
)

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ CSS –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –∏ —Å—Ç–∏–ª–µ–π
st.markdown("""
<style>
    .stApp {
        background-color: #f0f2f6;
    }
    .stMetric {
        background-color: #ffffff;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .stPlotlyChart {
        background-color: #ffffff;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("–ú–æ–π –î–∞—à–±–æ—Ä–¥")

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
np.random.seed(42)
data = pd.DataFrame({
    'x': range(100),
    'y1': np.random.normal(loc=0, scale=1, size=100).cumsum(),
    'y2': np.random.normal(loc=0, scale=1, size=100).cumsum(),
    'y3': np.random.normal(loc=0, scale=1, size=100).cumsum(),
    'y4': np.random.normal(loc=0, scale=1, size=100).cumsum(),
    'y5': np.random.normal(loc=0, scale=1, size=100).cumsum(),
    'y6': np.random.normal(loc=0, scale=1, size=100).cumsum()
})

# –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
col1, col2, col3, col4 = st.columns(4)
with col1:
    st.metric(label="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä 1", value=np.random.randint(500))
with col2:
    st.metric(label="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä 2", value=np.random.randint(200))
with col3:
    st.metric(label="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä 3", value=np.random.randint(300))
with col4:
    st.metric(label="–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä 4", value=np.random.randint(400))

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
row1, row2, row3 = st.columns((1, 1, 1))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
def plot_chart(data, x, y, kind, ax):
    if kind == 'line':
        sns.lineplot(x=data[x], y=data[y], ax=ax)
    elif kind == 'bar':
        sns.barplot(x=data[x], y=data[y], ax=ax)
    elif kind == 'scatter':
        sns.scatterplot(x=data[x], y=data[y], ax=ax)
    elif kind == 'hist':
        sns.histplot(data[y], kde=True, ax=ax)
    elif kind == 'box':
        sns.boxplot(y=data[y], ax=ax)
    elif kind == 'kde':
        sns.kdeplot(data[y], shade=True, ax=ax)
    ax.set_title(f"{kind.capitalize()} Plot")
    ax.set_xlabel(x)
    ax.set_ylabel(y)

# –ü–µ—Ä–≤—ã–π —Ä—è–¥ –≥—Ä–∞—Ñ–∏–∫–æ–≤
with row1:
    fig1, ax1 = plt.subplots()
    plot_chart(data, 'x', 'y1', 'line', ax1)
    st.pyplot(fig1)
    
    fig2, ax2 = plt.subplots()
    plot_chart(data, 'x', 'y2', 'bar', ax2)
    st.pyplot(fig2)

# –í—Ç–æ—Ä–æ–π —Ä—è–¥ –≥—Ä–∞—Ñ–∏–∫–æ–≤
with row2:
    fig3, ax3 = plt.subplots()
    plot_chart(data, 'x', 'y3', 'scatter', ax3)
    st.pyplot(fig3)
    
    fig4, ax4 = plt.subplots()
    plot_chart(data, 'x', 'y4', 'hist', ax4)
    st.pyplot(fig4)

# –¢—Ä–µ—Ç–∏–π —Ä—è–¥ –≥—Ä–∞—Ñ–∏–∫–æ–≤
with row3:
    fig5, ax5 = plt.subplots()
    plot_chart(data, 'x', 'y5', 'box', ax5)
    st.pyplot(fig5)
    
    fig6, ax6 = plt.subplots()
    plot_chart(data, 'x', 'y6', 'kde', ax6)
    st.pyplot(fig6)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
st.write("""
### –û–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–∞—à–±–æ—Ä–¥–∞.
""")
```
